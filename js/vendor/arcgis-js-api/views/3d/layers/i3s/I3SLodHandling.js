// COPYRIGHT Â© 2016 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.

define(["require","exports"],function(e,o){var r=!1,i=!1,t=function(){function e(e,o){this.layerViewRequiredFunctions=e,this.layerViewOptionalFunctions=o,this._lodSwapNodeIndex={},this._lodSwapFeatureLookup={},this._lodSwapRootFeatureLookup={}}return e.prototype.startNodeLoading=function(e,o,i,t,n,d){if(this._lodGlobalDirty=!1,this._lodMode=i,this._lodSwapNodeIndex={},this._lodSwapFeatureLookup={},this._lodSwapRootFeatureLookup={},this._nodeIndex=t,this._rootId=d,this._nodeTraversalState=o,this._nodeIsVisible=e,r&&console.debug("_removeInvisibleNodes started"),"swap"===this._lodMode){for(var l in n){var a=n[l];this._nodeTraversalState(a.id).nodeHasLOD&&!this._nodeTraversalState(a.id).isChosenLOD&&(r&&console.debug("_removeInvisibleNodes: added node "+a.id+" to swap index"),this._lodSwapNodeIndex[l]=a)}this._lodSwapBuildUnmatchingFeatureLookups()}},e.prototype.cancelNodeLoading=function(){this._lodSwapNodeIndex={}},e.prototype.shouldLoadNode=function(e,o){var r=this._nodeTraversalState(e.id),i=r.nodeHasLOD,t=r.isChosenLOD;return"perLevel"!==this._lodMode?t||!i:t||!i?!0:this.layerViewOptionalFunctions.traversalOptions.allowPartialOverlaps?this._someSubtreesIncomplete(e):this._allSubtreesIncomplete(e)},e.prototype.shouldSetPolygonOffset=function(e){return"perLevel"===this._lodMode?!this._nodeTraversalState(e.id).isChosenLOD:!1},e.prototype._allSubtreesIncomplete=function(e){if(this.layerViewRequiredFunctions.areAllBundlesLoaded(e))return!1;var o=!0;if(null!=e.children)for(var r=0;r<e.children.length;++r){var i=e.children[r];if(this._nodeIsVisible(i)){var t=this._nodeIndex[i.id];o=o&&(null==t||this._allSubtreesIncomplete(t))}}return o},e.prototype._someSubtreesIncomplete=function(e){if(this.layerViewRequiredFunctions.areAllBundlesLoaded(e))return!1;var o=!1;if(null!=e.children)for(var r=0;r<e.children.length;++r){var i=e.children[r];if(this._nodeIsVisible(i)){var t=this._nodeIndex[i.id];o=o||null==t||this._allSubtreesIncomplete(t)}}return o},e.prototype.setLodGlobalDirty=function(){this._lodGlobalDirty=!0},e.prototype.finishedLevel=function(e){"perLevel"===this._lodMode&&this._deleteUpToLevelRecurse(e-1,0,this._nodeIndex[this._rootId])},e.prototype._deleteUpToLevelRecurse=function(e,o,i){if(null!=i&&!(o>e)&&(this._nodeTraversalState(i.id).isChosenLOD||(r&&console.debug("_deleteUpToLevelRecurse: removing node "+i.id),this.layerViewRequiredFunctions.removeNodeData(i)),null!=i.children))for(var t=0;t<i.children.length;++t){var n=i.children[t];this._deleteUpToLevelRecurse(e,o+1,this._nodeIndex[n.id])}},e.prototype.lodSwapBundleLoaded=function(e,o,i){if(r&&console.debug("lodSwapBundleLoaded "+e.id),null!=i)if(null!=i.swapPairs&&Object.keys(i.swapPairs).length>0){if(null!=o){for(var t=i.swapPairs,n={},d=0;d<o.length;d++)for(var l=o[d].features,a=0;a<l.length;a++)n[l[a].id]=!0;for(var s in t){for(var u=t[s],h=[],p=u.features,f=0;f<p.length;f++)null!=n[p[f]]&&h.push(p[f]);this.layerViewRequiredFunctions.removeFeatures(u.node,u.features)}}}else{for(var c in i.nodesHigherInTree)this.layerViewRequiredFunctions.removeNodeData(i.nodesHigherInTree[c]);for(var c in i.nodesDeeperInTree)this.layerViewRequiredFunctions.removeNodeData(i.nodesDeeperInTree[c])}this._lodGlobalDirty=!0},e.prototype.lodGlobalHandling=function(){if("global"===this._lodMode&&(this._lodGlobalDirty===!0||this.layerViewRequiredFunctions.isOverMemory())){var e=this._rootId;if(null==e)return;i&&console.debug("****************** _perNodeLodHandling started *******************");var o={id:e,mbs:null};this._lodGlobalHandlingRecursion(o,this._nodeIndex,!1,!1,0),this._lodGlobalHandlingRecursionRemoveIntermediate(e,this._nodeIndex,!1,0),this._lodGlobalDirty=!1}},e.prototype.lodSwapBuildInfoForNode=function(e){var o=!0;r&&console.debug("lodSwapBuildInfoForNode: node "+e.id);var i=this._nodeTraversalState(e.id).nodeHasLOD;if(!i)return null;if("swap"===this._lodMode){var t={},n={},d={},l=!1,a=!1,s=e.id+"";for(var u in this._lodSwapNodeIndex){var h=this._lodSwapNodeIndex[u],p=this.layerViewRequiredFunctions.getAddedFeatures(h.id);if(null!=p&&(l=null===e.parentNode||0===(h.id+"").indexOf(s),a=null==h.parentNode||0===s.indexOf(h.id+""),a===!0&&(d[h.id]=h),l===!0)){if(n[h.id]=h,o)continue;for(var f=0;f<p.length;f++)null==t&&(t={}),null==t[u]&&(t[u]={features:[],node:h}),t[u].features.push(p[f])}}if(null!=e.features&&o===!1)for(var c in e.features){var v=e.features[c];if(null!=v.rootFeature){var _=this._lodSwapRootFeatureLookup[v.rootFeature];if(null!=_)for(var g=0;g<_.length;g++){var y=_[g].node;if(null!=y&&null==n[y.id]&&null!=d[y.id]){var F=y.id;null==t[F]&&(t[F]={features:[],node:y}),t[F].features.push(_[g].featureId)}}var w=this._lodSwapFeatureLookup[v.rootFeature];if(null!=w&&!n[w.id]){var I=w.id;null==t[I]&&(t[I]={features:[],node:w}),t[I].features.push(v.rootFeature)}}}if(r&&o){var b={},L={};for(var S in this._nodeIndex){var R=this._nodeIndex[S],p=this.layerViewRequiredFunctions.getAddedFeatures(S);null!=p&&(l=null===e.parentNode||0===(S+"").indexOf(s),a=null==R.parentNode||0===s.indexOf(S+""),a===!0&&(L[S]=R),l===!0&&(b[S]=R))}(Object.keys(L).length!==Object.keys(d).length||Object.keys(b).length!==Object.keys(n).length)&&console.debug("!! mismatch node nodesInTreeAll vs nodesInTree from unmatchingLodNodeId")}if(o){if(r){var m="nodesHigherInTree: ";for(var N in d)m+="["+d[N].id+"], ";m+=" nodesDeeperInTree: ";for(var N in n)m+="["+n[N].id+"], ";console.debug("_lodSwapBuildInfoForNode: node "+e.id+", swapPairs "+m)}return{nodesHigherInTree:d,nodesDeeperInTree:n}}if(r&&t){var m="";for(var N in t)m+="["+t[N].features+", nodeId: "+t[N].node.id+"], ";console.debug("_lodSwapBuildInfoForNode: node "+e.id+", swapPairs "+m)}return{swapPairs:t}}if("perLevel"===this._lodMode&&this._nodeTraversalState(e.id).isChosenLOD){var n={};return this._getNodesRecurse(e,n),{nodesHigherInTree:null,nodesDeeperInTree:n}}},e.prototype._getNodesRecurse=function(e,o){if(null!=e.children)for(var r=0;r<e.children.length;++r){var i=e.children[r],t=this._nodeIndex[i.id];null!=t&&(o[i.id]=t,this._getNodesRecurse(t,o))}},e.prototype._lodSwapBuildUnmatchingFeatureLookups=function(){this._lodSwapFeatureLookup={},this._lodSwapRootFeatureLookup={};for(var e in this._lodSwapNodeIndex){var o=this._lodSwapNodeIndex[e],r=this.layerViewRequiredFunctions.getAddedFeatures(o.id);if(null!=r)for(var i=0;i<r.length;i++){var t=r[i];this._lodSwapFeatureLookup[t.id]=o,null!=t.rootFeature&&(null==this._lodSwapRootFeatureLookup[t.rootFeature]&&(this._lodSwapRootFeatureLookup[t.rootFeature]=[]),this._lodSwapRootFeatureLookup[t.rootFeature].push({node:o,featureId:t.id}))}}},e.prototype._validateLodTreeVisibilities=function(){if(null!=this.layerViewOptionalFunctions.getAllAddedFeatures){var e=this.layerViewOptionalFunctions.getAllAddedFeatures();console.debug("validating lod tree: ");var o={},r={},i=!0;for(var t in e)for(var n=e[t],d=0;d<n.length;d++){var l=n[d];null!=o[l.id]&&o[l.id]!==t&&(console.debug("node "+t+" !! encountered feature "+l.id+" already in node "+o[l.id]),i=!1),null!=r[l.id]&&r[l.id]!==t&&(console.debug("node "+t+" !! encountered feature "+l.id+" already as rootFeature in node "+r[l.id]),i=!1),o[l.id]=t,null!=l.rootFeature&&r[l.rootFeature]!==t&&(null!=r[l.rootFeature]&&(console.debug("node "+t+" !! encountered rootFeature "+l.rootFeature+" already in node "+r[l.rootFeature]),i=!1),null!=o[l.rootFeature]&&(console.debug("node "+t+" !! encountered rootFeature "+l.rootFeature+" already as feature"),i=!1),r[l.rootFeature]=t)}return i}},e.prototype._lodGlobalHandlingRecursion=function(e,o,r,t,n){var d=e.id,l=o[d];if(null==l){var a=null!=e.mbs?this._nodeIsVisible(e):!1,s=t||!a;return i&&console.debug(new Array(n).join(" ")+"node == null id "+d+" isComplete "+s+" higherNodeIsChosen "+t+" isVisible "+a),s}var u=this._nodeTraversalState(d),h=this._nodeIsVisible(l),p=u.isChosenLOD,f=this.layerViewRequiredFunctions.isBundleAlreadyAddedToStage(l,0).alreadyLoaded,c=!0;if(null!=l.children)for(var v=0;v<l.children.length;++v){var _=l.children[v],g=this._lodGlobalHandlingRecursion(_,o,f&&p||r,p||t,n+1);g||(c=!1)}var y=this.layerViewRequiredFunctions.isOverMemory();if(f&&!p&&((t?r:c)||y)&&(this.setLodGlobalDirty(),this.layerViewRequiredFunctions.removeNodeData(l),f=!1,i&&console.debug(new Array(n).join(" ")+"**qeued node removal id "+l.id)),f&&this.layerViewOptionalFunctions.setPolygonOffset){var F=!(p&&!t);this.layerViewOptionalFunctions.setPolygonOffset(l,F)}var w=c||f;return(p&&f||!h||t)&&(w=!0),p&&!f&&h&&(w=!1),i&&console.debug(new Array(n).join(" ")+"id "+l.id+" isComplete "+w+" isVisible "+h+" isAddedToStage "+f+" isChosenLOD "+p+" subtreeComplete "+c+" higherNodeIsShown "+r+" higherNodeIsChosen "+t),w},e.prototype._lodGlobalHandlingRecursionRemoveIntermediate=function(e,o,r,i){var t=o[e];if(null!=t){var n=this.layerViewRequiredFunctions.isBundleAlreadyAddedToStage(t,0).alreadyLoaded,d=this._nodeTraversalState(e),l=d.isChosenLOD;if(null!=t.children)for(var a=0;a<t.children.length;++a){var s=t.children[a];this._lodGlobalHandlingRecursionRemoveIntermediate(s.id,o,n||r,i+1)}r&&!l&&n&&(this.layerViewRequiredFunctions.removeNodeData(t),this.setLodGlobalDirty())}},e}();return t});